generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  engineType = ""
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @db.Uuid @default(uuid())
  name String
  email String @unique
  age Int?
  isActive Boolean @default(true) @map("is_active") 

  profile Profile?
  orders Order[]

  @@index([name])
  @@map("users")
}

model Profile {
  id String @id @db.Uuid @default(uuid())
  userId String @map("user_id") @db.Uuid @unique
  instagram String?
  github String?
  bio String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("profiles")
}

model Order {
  id String @id @db.Uuid @default(uuid())
  userId String @map("user_id") @db.Uuid
  value Float

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  products OrderProduct[]

  @@map("orders")
}

model Product {
  id String @id @db.Uuid @default(uuid())
  name String

  orders OrderProduct[]

  @@map("products")
}

model OrderProduct {
  orderId String @db.Uuid
  productId String @db.Uuid
  quantity Int

  order Order @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
  @@map("orders_products")
}